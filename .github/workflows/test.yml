name: Test storage deploy
on: [push]

jobs:
  test:
    name: Test Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get credentials
        uses: leanix/secrets-action@master
        with:
          secret-store-credentials: ${{ secrets.INJECTED_SECRET_STORE_CREDENTIALS }}
      
      - name: Fetch SAS token to access leanixwesteuropetest Azure File Storage
        run: sh ./.github/workflows/fetch_sas_token.sh
        env:
          ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
      
      - name: Define constants 
        run: sh ./.github/workflows/define_test_constants.sh
        env:
          SAS_TOKEN: ${{ env.SAS_TOKEN }}

      - name: Use storage deploy action
        uses: ./
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test

      - name: Use storage deploy action with region option
        uses: ./
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test
          region: westeurope
      
      - name: Deployment to Azure Blob Storage has been successful
        run: sh ./.github/workflows/validate_azure_blob_deployment.sh
      
      - name: Deployment to Azure File Share has been successful
        run: sh ./.github/workflows/validate_azure_file_share_deployment.sh
      
      - name: Use storage deploy action with versioning
        uses: ./
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test
          region: westeurope
          version-deployment: true
          app-name: test-microfrontend
        id: versioned-deployment
      
      - name: Versioned deployment to Azure Blob storage has been successful
        run: sh ./.github/workflows/validate_versioned_azure_blob_deployment.sh
        env:
          VERSION: ${{ steps.versioned-deployment.outputs.version }}

      - name: Versioned deployment to Azure File Share has been successful
        run: sh ./.github/workflows/validate_versioned_azure_file_share_deployment.sh
        env:
          SAS_TOKEN: ${{ env.SAS_TOKEN }}
          VERSION: ${{ steps.versioned-deployment.outputs.version }}
      
      - name: Introduce breaking change
        run: python ./.github/workflows/make_breaking_change.py
      
      - name: Deploy a breaking change without versioning
        uses: ./
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test
          region: westeurope
          delete-destination: false

      - name: Deployment of breaking change to Azure Blob storage successful
        run: |
          receivedIndexHtml=$(curl -s $(cat INDEX_HTML_BLOB))
          receivedMainJs=$(curl -s $(cat MAIN_JS_BLOB))
          receivedPolyfillsJs=$(curl -s $(cat POLYFILLS_JS_BLOB))
          receivedPolyfillsEs5Js=$(curl -s $(cat POLYFILLS_ES5_JS_BLOB))
          receivedStylesCss=$(curl -s $(cat STYLES_CSS_BLOB))
          receivedScriptsJs=$(curl -s $(cat SCRIPTS_JS_BLOB))
          receivedLogoutHtml=$(curl -s $(cat LOGOUT_HTML_BLOB))
          if [[ $receivedIndexHtml != $(cat EXPECTED_BROKEN_INDEX_HTML) || $receivedMainJs != $(cat EXPECTED_BROKEN_MAIN_JS) || $receivedPolyfillsJs != $(cat EXPECTED_BROKEN_POLYFILLS_JS) || $receivedPolyfillsEs5Js != $(cat EXPECTED_BROKEN_POLYFILLS_ES5_JS) || $receivedStylesCss != $(cat EXPECTED_BROKEN_STYLES_CSS) || $receivedScriptsJs != $(cat EXPECTED_BROKEN_SCRIPTS_JS) || $receivedLogoutHtml != $(cat EXPECTED_BROKEN_LOGOUT_HTML) ]] ; then
            echo "::error ::Deployment has not been successful"
            exit 1
          fi
      
      - name: Deployment of breaking change to Azure File Share successful
        run: |
          receivedIndexHtml=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat INDEX_HTML_FILE)")
          receivedMainJs=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat MAIN_JS_FILE)")
          receivedPolyfillsJs=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat POLYFILLS_JS_FILE)")
          receivedPolyfillsEs5Js=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat POLYFILLS_ES5_JS_FILE)")
          receivedStylesCss=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat STYLES_CSS_FILE)")
          receivedScriptsJs=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat SCRIPTS_JS_FILE)")
          receivedLogoutHtml=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat LOGOUT_HTML_FILE)")
          if [[ $receivedIndexHtml != $(cat EXPECTED_BROKEN_INDEX_HTML) || $receivedMainJs != $(cat EXPECTED_BROKEN_MAIN_JS) || $receivedPolyfillsJs != $(cat EXPECTED_BROKEN_POLYFILLS_JS) || $receivedPolyfillsEs5Js != $(cat EXPECTED_BROKEN_POLYFILLS_ES5_JS) || $receivedStylesCss != $(cat EXPECTED_BROKEN_STYLES_CSS) || $receivedScriptsJs != $(cat EXPECTED_BROKEN_SCRIPTS_JS) || $receivedLogoutHtml != $(cat EXPECTED_BROKEN_LOGOUT_HTML) ]] ; then
            echo "::error ::Deployment has not been successful"
            exit 1
          fi
      
      - name: Rollback breaking change
        uses: ./
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test
          region: westeurope
          in-rollback-mode: true
          rollback-version: ${{ steps.versioned-deployment.outputs.version }}
      
      - name: Rollback on Azure Blob storage successful
        run: |
          receivedIndexHtml=$(curl -s $(cat INDEX_HTML_BLOB))
          receivedMainJs=$(curl -s $(cat MAIN_JS_BLOB))
          receivedPolyfillsJs=$(curl -s $(cat POLYFILLS_JS_BLOB))
          receivedPolyfillsEs5Js=$(curl -s $(cat POLYFILLS_ES5_JS_BLOB))
          receivedStylesCss=$(curl -s $(cat STYLES_CSS_BLOB))
          receivedScriptsJs=$(curl -s $(cat SCRIPTS_JS_BLOB))
          receivedLogoutHtml=$(curl -s $(cat LOGOUT_HTML_BLOB))
          if [[ $receivedIndexHtml != $(cat EXPECTED_STABLE_INDEX_HTML) || $receivedMainJs != $(cat EXPECTED_STABLE_MAIN_JS) || $receivedPolyfillsJs != $(cat EXPECTED_STABLE_POLYFILLS_JS) || $receivedPolyfillsEs5Js != $(cat EXPECTED_STABLE_POLYFILLS_ES5_JS) || $receivedStylesCss != $(cat EXPECTED_STABLE_STYLES_CSS) || $receivedScriptsJs != $(cat EXPECTED_STABLE_SCRIPTS_JS) || $receivedLogoutHtml != $(cat EXPECTED_STABLE_LOGOUT_HTML) ]] ; then
            echo "::error ::Rollback has not been successful"
            exit 1
          fi
      
      - name: Rollback on Azure File Share successful
        run: |
          receivedIndexHtml=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat INDEX_HTML_FILE)")
          receivedMainJs=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat MAIN_JS_FILE)")
          receivedPolyfillsJs=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat POLYFILLS_JS_FILE)")
          receivedPolyfillsEs5Js=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat POLYFILLS_ES5_JS_FILE)")
          receivedStylesCss=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat STYLES_CSS_FILE)")
          receivedScriptsJs=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat SCRIPTS_JS_FILE)")
          receivedLogoutHtml=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat LOGOUT_HTML_FILE)")
          if [[ $receivedIndexHtml != $(cat EXPECTED_STABLE_INDEX_HTML) || $receivedMainJs != $(cat EXPECTED_STABLE_MAIN_JS) || $receivedPolyfillsJs != $(cat EXPECTED_STABLE_POLYFILLS_JS) || $receivedPolyfillsEs5Js != $(cat EXPECTED_STABLE_POLYFILLS_ES5_JS) || $receivedStylesCss != $(cat EXPECTED_STABLE_STYLES_CSS) || $receivedScriptsJs != $(cat EXPECTED_STABLE_SCRIPTS_JS) || $receivedLogoutHtml != $(cat EXPECTED_STABLE_LOGOUT_HTML) ]] ; then
            echo "::error ::Rollback has not been successful"
            exit 1
          fi 

      - name: Should fail because of unsupported region
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test
          region: northeurope

      - name: Should fail because of forbidden container name
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: foobar

      - name: Should fail because of not existing container name
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-unknown

      - name: Should fail because of invalid region
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-public
          region: foobar

      - name: Should fail because of invalid environment
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: foobar

      - name: Rollback fails, if no rollback-version specified
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test
          in-rollback-mode: true
