name: Test storage deploy
on: [push]

jobs:
  test:
    name: Test Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get credentials
        uses: leanix/secrets-action@master
        with:
          secret-store-credentials: ${{ secrets.INJECTED_SECRET_STORE_CREDENTIALS }}
      
      - name: Fetch SAS token to access leanixwesteuropetest Azure File Storage
        run: |
          az login --service-principal -u ${{ env.ARM_CLIENT_ID }} -p=${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}
          az account set -s ${{ env.ARM_SUBSCRIPTION_ID }}
          expires="$(TZ=UTC date -d '+2 hours' +%Y-%m-%dT%H:%M:%SZ)"
          sasToken="$(az storage account generate-sas --expiry $expires --permissions r --account-name leanixwesteuropetest --resource-types o --services f --https-only -o json | jq --raw-output)"
          echo "SAS_TOKEN=$(echo $sasToken)" >> $GITHUB_ENV
      
      - name: Define variables
        run: |
          echo "https://leanixwesteuropetest.blob.core.windows.net/storage-deploy-action-public/test.txt" > TEST_TXT_BLOB
          echo "https://leanixwesteuropetest.file.core.windows.net/k8s-cdn-proxy/storage-deploy-action-public/test.txt?$SAS_TOKEN" > TEST_TXT_FILE
          echo "hello world" > EXPECTED_TEST_TXT

      - name: Use storage deploy action
        uses: ./
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test

      - name: Use storage deploy action with region option
        uses: ./
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test
          region: westeurope
      
      - name: Deployment to Azure Blob Storage has been successful
        run: |
          receivedTestTxt=$(curl -s $(cat TEST_TXT_BLOB))
          if [[ $receivedTestTxt != $(cat EXPECTED_TEST_TXT) ]] ; then
            echo "::error ::Deployment has not been successful"
            exit 1
          fi
      
      - name: Deployment to Azure File Share has been successful
        run: |
          receivedTestTxt=$(curl -X GET -H "x-ms-date: $(date -u)" "$(cat TEST_TXT_FILE)")
          if [[ $receivedTestTxt != $(cat EXPECTED_TEST_TXT) ]] ; then
            echo "::error ::Deployment has not been successful"
            exit 1
          fi

      - name: Should fail because of unsupported region
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: test
          region: northeurope

      - name: Should fail because of forbidden container name
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: foobar

      - name: Should fail because of not existing container name
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-unknown

      - name: Should fail because of invalid region
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-public
          region: foobar

      - name: Should fail because of invalid environment
        uses: ./
        continue-on-error: true
        with:
          source-directory: test
          container: storage-deploy-action-public
          environment: foobar